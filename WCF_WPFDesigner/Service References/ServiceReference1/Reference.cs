//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_WpfDesigner.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDesignerService")]
    public interface IDesignerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/LoadReport", ReplyAction="http://tempuri.org/IDesignerService/LoadReportResponse")]
        byte[] LoadReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/LoadReport", ReplyAction="http://tempuri.org/IDesignerService/LoadReportResponse")]
        System.Threading.Tasks.Task<byte[]> LoadReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/RenderingInteractions", ReplyAction="http://tempuri.org/IDesignerService/RenderingInteractionsResponse")]
        byte[] RenderingInteractions(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/RenderingInteractions", ReplyAction="http://tempuri.org/IDesignerService/RenderingInteractionsResponse")]
        System.Threading.Tasks.Task<byte[]> RenderingInteractionsAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/RequestFromUserRenderReport", ReplyAction="http://tempuri.org/IDesignerService/RequestFromUserRenderReportResponse")]
        byte[] RequestFromUserRenderReport(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/RequestFromUserRenderReport", ReplyAction="http://tempuri.org/IDesignerService/RequestFromUserRenderReportResponse")]
        System.Threading.Tasks.Task<byte[]> RequestFromUserRenderReportAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/ExportDocument", ReplyAction="http://tempuri.org/IDesignerService/ExportDocumentResponse")]
        byte[] ExportDocument(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/ExportDocument", ReplyAction="http://tempuri.org/IDesignerService/ExportDocumentResponse")]
        System.Threading.Tasks.Task<byte[]> ExportDocumentAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/PrepareRequestFromUserVariables", ReplyAction="http://tempuri.org/IDesignerService/PrepareRequestFromUserVariablesResponse")]
        byte[] PrepareRequestFromUserVariables(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/PrepareRequestFromUserVariables", ReplyAction="http://tempuri.org/IDesignerService/PrepareRequestFromUserVariablesResponse")]
        System.Threading.Tasks.Task<byte[]> PrepareRequestFromUserVariablesAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/InteractiveDataBandSelection", ReplyAction="http://tempuri.org/IDesignerService/InteractiveDataBandSelectionResponse")]
        byte[] InteractiveDataBandSelection(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/InteractiveDataBandSelection", ReplyAction="http://tempuri.org/IDesignerService/InteractiveDataBandSelectionResponse")]
        System.Threading.Tasks.Task<byte[]> InteractiveDataBandSelectionAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/SaveReport", ReplyAction="http://tempuri.org/IDesignerService/SaveReportResponse")]
        bool SaveReport(byte[] buffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/SaveReport", ReplyAction="http://tempuri.org/IDesignerService/SaveReportResponse")]
        System.Threading.Tasks.Task<bool> SaveReportAsync(byte[] buffer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/LoadConfiguration", ReplyAction="http://tempuri.org/IDesignerService/LoadConfigurationResponse")]
        byte[] LoadConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/LoadConfiguration", ReplyAction="http://tempuri.org/IDesignerService/LoadConfigurationResponse")]
        System.Threading.Tasks.Task<byte[]> LoadConfigurationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/RenderReport", ReplyAction="http://tempuri.org/IDesignerService/RenderReportResponse")]
        byte[] RenderReport(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/RenderReport", ReplyAction="http://tempuri.org/IDesignerService/RenderReportResponse")]
        System.Threading.Tasks.Task<byte[]> RenderReportAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/TestConnection", ReplyAction="http://tempuri.org/IDesignerService/TestConnectionResponse")]
        byte[] TestConnection(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/TestConnection", ReplyAction="http://tempuri.org/IDesignerService/TestConnectionResponse")]
        System.Threading.Tasks.Task<byte[]> TestConnectionAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/BuildObjects", ReplyAction="http://tempuri.org/IDesignerService/BuildObjectsResponse")]
        byte[] BuildObjects(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/BuildObjects", ReplyAction="http://tempuri.org/IDesignerService/BuildObjectsResponse")]
        System.Threading.Tasks.Task<byte[]> BuildObjectsAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/RetrieveColumns", ReplyAction="http://tempuri.org/IDesignerService/RetrieveColumnsResponse")]
        byte[] RetrieveColumns(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/RetrieveColumns", ReplyAction="http://tempuri.org/IDesignerService/RetrieveColumnsResponse")]
        System.Threading.Tasks.Task<byte[]> RetrieveColumnsAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/OpenReportScript", ReplyAction="http://tempuri.org/IDesignerService/OpenReportScriptResponse")]
        byte[] OpenReportScript(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/OpenReportScript", ReplyAction="http://tempuri.org/IDesignerService/OpenReportScriptResponse")]
        System.Threading.Tasks.Task<byte[]> OpenReportScriptAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/SaveReportScript", ReplyAction="http://tempuri.org/IDesignerService/SaveReportScriptResponse")]
        byte[] SaveReportScript(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/SaveReportScript", ReplyAction="http://tempuri.org/IDesignerService/SaveReportScriptResponse")]
        System.Threading.Tasks.Task<byte[]> SaveReportScriptAsync(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/CheckReport", ReplyAction="http://tempuri.org/IDesignerService/CheckReportResponse")]
        byte[] CheckReport(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDesignerService/CheckReport", ReplyAction="http://tempuri.org/IDesignerService/CheckReportResponse")]
        System.Threading.Tasks.Task<byte[]> CheckReportAsync(byte[] data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDesignerServiceChannel : WCF_WpfDesigner.ServiceReference1.IDesignerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DesignerServiceClient : System.ServiceModel.ClientBase<WCF_WpfDesigner.ServiceReference1.IDesignerService>, WCF_WpfDesigner.ServiceReference1.IDesignerService {
        
        public DesignerServiceClient() {
        }
        
        public DesignerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DesignerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DesignerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DesignerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] LoadReport() {
            return base.Channel.LoadReport();
        }
        
        public System.Threading.Tasks.Task<byte[]> LoadReportAsync() {
            return base.Channel.LoadReportAsync();
        }
        
        public byte[] RenderingInteractions(byte[] data) {
            return base.Channel.RenderingInteractions(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> RenderingInteractionsAsync(byte[] data) {
            return base.Channel.RenderingInteractionsAsync(data);
        }
        
        public byte[] RequestFromUserRenderReport(byte[] data) {
            return base.Channel.RequestFromUserRenderReport(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> RequestFromUserRenderReportAsync(byte[] data) {
            return base.Channel.RequestFromUserRenderReportAsync(data);
        }
        
        public byte[] ExportDocument(byte[] data) {
            return base.Channel.ExportDocument(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> ExportDocumentAsync(byte[] data) {
            return base.Channel.ExportDocumentAsync(data);
        }
        
        public byte[] PrepareRequestFromUserVariables(byte[] data) {
            return base.Channel.PrepareRequestFromUserVariables(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> PrepareRequestFromUserVariablesAsync(byte[] data) {
            return base.Channel.PrepareRequestFromUserVariablesAsync(data);
        }
        
        public byte[] InteractiveDataBandSelection(byte[] data) {
            return base.Channel.InteractiveDataBandSelection(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> InteractiveDataBandSelectionAsync(byte[] data) {
            return base.Channel.InteractiveDataBandSelectionAsync(data);
        }
        
        public bool SaveReport(byte[] buffer) {
            return base.Channel.SaveReport(buffer);
        }
        
        public System.Threading.Tasks.Task<bool> SaveReportAsync(byte[] buffer) {
            return base.Channel.SaveReportAsync(buffer);
        }
        
        public byte[] LoadConfiguration() {
            return base.Channel.LoadConfiguration();
        }
        
        public System.Threading.Tasks.Task<byte[]> LoadConfigurationAsync() {
            return base.Channel.LoadConfigurationAsync();
        }
        
        public byte[] RenderReport(byte[] data) {
            return base.Channel.RenderReport(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> RenderReportAsync(byte[] data) {
            return base.Channel.RenderReportAsync(data);
        }
        
        public byte[] TestConnection(byte[] data) {
            return base.Channel.TestConnection(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> TestConnectionAsync(byte[] data) {
            return base.Channel.TestConnectionAsync(data);
        }
        
        public byte[] BuildObjects(byte[] data) {
            return base.Channel.BuildObjects(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> BuildObjectsAsync(byte[] data) {
            return base.Channel.BuildObjectsAsync(data);
        }
        
        public byte[] RetrieveColumns(byte[] data) {
            return base.Channel.RetrieveColumns(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> RetrieveColumnsAsync(byte[] data) {
            return base.Channel.RetrieveColumnsAsync(data);
        }
        
        public byte[] OpenReportScript(byte[] data) {
            return base.Channel.OpenReportScript(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> OpenReportScriptAsync(byte[] data) {
            return base.Channel.OpenReportScriptAsync(data);
        }
        
        public byte[] SaveReportScript(byte[] data) {
            return base.Channel.SaveReportScript(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> SaveReportScriptAsync(byte[] data) {
            return base.Channel.SaveReportScriptAsync(data);
        }
        
        public byte[] CheckReport(byte[] data) {
            return base.Channel.CheckReport(data);
        }
        
        public System.Threading.Tasks.Task<byte[]> CheckReportAsync(byte[] data) {
            return base.Channel.CheckReportAsync(data);
        }
    }
}
